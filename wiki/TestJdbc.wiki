import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * @Copyright 2012-2013 donnie(donnie4w@gmail.com)
 * @date 2012-12-7
 * @verion 1.0 test
 */
public class TestJdbc {

	public static void selete(int threadNum) throws Exception {
		for (int i = 0; i < threadNum; i++) {
			new SeleteTask2().start();
		}
	}

	public static void insert(int threadNum) throws Exception {
		for (int i = 0; i < threadNum; i++) {
			new InsertTask2().start();
		}
	}

	public static void main(String[] args) throws Exception {
		TestJdbc.selete(10);
		// TestJdbc.insert(10);
	}
}

class SeleteTask2 extends Thread {
	Connection conn = null;
	static {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
		}
	}

	public void run() {
		try {
			conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:8660/wuxiaodong", "wuxiaodong", "123456");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		try {
			String sql = "select id,rowname,value from hstest where id=?";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, 2);
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				System.out.println(rs.getString(1) + "|" + rs.getString(2) + "|" + rs.getString(3));
				break;
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
}

class InsertTask2 extends Thread {
	Connection conn = null;
	static {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
		}
	}

	public void run() {
		try {
			conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:8660/wuxiaodong", "wuxiaodong", "123456");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		try {
			// conn.setAutoCommit(false);
			conn.setAutoCommit(true);
			String sql = "insert into hstest(rowname,value) values (?,?)";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, "donnie_" + Thread.currentThread().getId());
			pstmt.setString(2, "wuxiaodong_" + Thread.currentThread().getId());
			int i = pstmt.executeUpdate();
			// con.rollback();
			conn.commit();
			System.out.println("updateCount====" + i);
			// throw new RuntimeException();
			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}